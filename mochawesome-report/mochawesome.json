{
  "stats": {
    "suites": 3,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2021-06-09T18:57:41.541Z",
    "end": "2021-06-09T18:57:41.609Z",
    "duration": 68,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9b015161-b07f-4291-a6e6-deebb66737b3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
          "title": "calculator tests",
          "fullFile": "D:\\automation-testing-mentoring\\mocha-unit-testing-hometask\\test\\specs\\calculator.spec.js",
          "file": "\\test\\specs\\calculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"calculator tests\"",
              "fullTitle": "calculator tests \"before each\" hook in \"calculator tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator();",
              "err": {},
              "uuid": "f71dfbd4-08ea-412c-906a-88814e0ad46d",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct sum of some parameters",
              "fullTitle": "calculator tests should return correct sum of some parameters",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(1, 4, 55, 66, 0)).to.be.equal(126);",
              "err": {},
              "uuid": "3ae91ca3-b377-460e-9572-7265217f6483",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return parameter value if sum method has 1 parameter",
              "fullTitle": "calculator tests should return parameter value if sum method has 1 parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(5)).to.be.equal(5);",
              "err": {},
              "uuid": "54fd0b7c-f152-45e6-a19a-80b42f5bd11c",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct sum of negative parameters",
              "fullTitle": "calculator tests should return correct sum of negative parameters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(-5, -10)).to.be.equal(-15);",
              "err": {},
              "uuid": "5da32352-10ff-4f3e-9da5-f567b254eaf6",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly multiply some parameters",
              "fullTitle": "calculator tests should correctly multiply some parameters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(1, 4, 5)).to.be.equal(20);",
              "err": {},
              "uuid": "37519f41-c9b7-4529-91e8-34a99a8e994e",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return parameter value if multiply method has 1 parameter",
              "fullTitle": "calculator tests should return parameter value if multiply method has 1 parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(5)).to.be.equal(5);",
              "err": {},
              "uuid": "0c38f59f-0c3a-414d-827e-7fbd52cbb997",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 if one of the parameters is 0",
              "fullTitle": "calculator tests should return 0 if one of the parameters is 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(5, 7, 9, 10, 11, 0)).to.be.equal(0);",
              "err": {},
              "uuid": "4ee14d1b-6b44-41f9-8b73-489d7666a023",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return negative value if one of the parameters is negative",
              "fullTitle": "calculator tests should return negative value if one of the parameters is negative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(1, 5, -1)).to.be.equal(-5);",
              "err": {},
              "uuid": "7efdf46f-fd13-4a6e-b3fa-c10d33032aaa",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return positive value if two parameters are negative",
              "fullTitle": "calculator tests should return positive value if two parameters are negative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(-7, -1)).to.be.equal(7);",
              "err": {},
              "uuid": "ff2e9f86-967e-4a80-bf8d-887f303e20c7",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error if some of parameters are not a number in add method",
              "fullTitle": "calculator tests should return error if some of parameters are not a number in add method",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function() {\n  calculator.add(1, 2, 'b');\n} ).throw('Some of arguments are not a number!');",
              "err": {},
              "uuid": "0523dc74-06a9-4104-9a53-ea96bc6f21fb",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error if some of parameters are not a number in multiply method",
              "fullTitle": "calculator tests should return error if some of parameters are not a number in multiply method",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function() {\n  calculator.multiply(1, 2, '@');\n} ).throw('Some of arguments are not a number!');",
              "err": {},
              "uuid": "8cad7391-b4c9-4ca9-9232-05f717b8378e",
              "parentUUID": "ee07e7e1-ad31-4b36-8f42-5b661b60e6d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ae91ca3-b377-460e-9572-7265217f6483",
            "54fd0b7c-f152-45e6-a19a-80b42f5bd11c",
            "5da32352-10ff-4f3e-9da5-f567b254eaf6",
            "37519f41-c9b7-4529-91e8-34a99a8e994e",
            "0c38f59f-0c3a-414d-827e-7fbd52cbb997",
            "4ee14d1b-6b44-41f9-8b73-489d7666a023",
            "7efdf46f-fd13-4a6e-b3fa-c10d33032aaa",
            "ff2e9f86-967e-4a80-bf8d-887f303e20c7",
            "0523dc74-06a9-4104-9a53-ea96bc6f21fb",
            "8cad7391-b4c9-4ca9-9232-05f717b8378e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
          "title": "factorialShort",
          "fullFile": "D:\\automation-testing-mentoring\\mocha-unit-testing-hometask\\test\\specs\\factorialShort.spec.js",
          "file": "\\test\\specs\\factorialShort.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"factorialShort\"",
              "fullTitle": "factorialShort \"before each\" hook in \"factorialShort\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = new Factorial();\nspy = chai.spy.on(factorial, 'factorialShort');",
              "err": {},
              "uuid": "6edd1572-e45c-43d3-b1f0-577ce5e9e010",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"factorialShort\"",
              "fullTitle": "factorialShort \"after each\" hook in \"factorialShort\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = null;",
              "err": {},
              "uuid": "4e75de04-dd45-4d6b-9407-daa53653301c",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 6 when called with number 3",
              "fullTitle": "factorialShort should return 6 when called with number 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(3)).to.be.equal(6);",
              "err": {},
              "uuid": "a8fed4a3-afe6-4b2b-b80e-a2db0cbef60a",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 362880 when called with number 9",
              "fullTitle": "factorialShort should return 362880 when called with number 9",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(9)).to.be.equal(362880);",
              "err": {},
              "uuid": "f2c557a9-a891-4cc6-8ddc-b7c6ae4f1eac",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if provided with a negative number",
              "fullTitle": "factorialShort should throw an error if provided with a negative number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let callWithError = () => factorial.factorialShort(-1);\nexpect(spy).to.be.a.spy;\nexpect(callWithError).to.throw(`Negative number!`);",
              "err": {},
              "uuid": "283f759e-1cd9-42d8-9750-35318692db5a",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be called twice when provided with 2",
              "fullTitle": "factorialShort should be called twice when provided with 2",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial.factorialShort(2);\nexpect(spy).to.have.been.called(2);",
              "err": {},
              "uuid": "2f0f3991-6c91-4722-a2b4-0fe343b9bee7",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when provided 1",
              "fullTitle": "factorialShort should return 1 when provided 1",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(1)).to.be.equal(1);",
              "err": {},
              "uuid": "17e4f9a8-0416-4490-8457-7296d44589b6",
              "parentUUID": "e28575a8-9f41-4a6d-a741-7e6e3e851812",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8fed4a3-afe6-4b2b-b80e-a2db0cbef60a",
            "f2c557a9-a891-4cc6-8ddc-b7c6ae4f1eac",
            "283f759e-1cd9-42d8-9750-35318692db5a",
            "2f0f3991-6c91-4722-a2b4-0fe343b9bee7",
            "17e4f9a8-0416-4490-8457-7296d44589b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0d282721-34a1-4ada-a803-7c156400364a",
          "title": "factorialSimple",
          "fullFile": "D:\\automation-testing-mentoring\\mocha-unit-testing-hometask\\test\\specs\\factorialSimple.spec.js",
          "file": "\\test\\specs\\factorialSimple.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"factorialSimple\"",
              "fullTitle": "factorialSimple \"before each\" hook in \"factorialSimple\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = new Factorial();\nspy = chai.spy.on(factorial, 'factorialSimple');",
              "err": {},
              "uuid": "5eeea08f-6d54-4ad4-84dd-6bd00d7a9f66",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"factorialSimple\"",
              "fullTitle": "factorialSimple \"after each\" hook in \"factorialSimple\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = null;",
              "err": {},
              "uuid": "6aa9279e-70b1-4009-9aaa-f94ebfd1c378",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 6 when called with number 3",
              "fullTitle": "factorialSimple should return 6 when called with number 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(3)).to.be.equal(6);",
              "err": {},
              "uuid": "54e18827-225e-437d-b4b0-5e922a27f04b",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 362880 when called with number 9",
              "fullTitle": "factorialSimple should return 362880 when called with number 9",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(9)).to.be.equal(362880);",
              "err": {},
              "uuid": "42152520-a737-454f-bae1-3202ca25b494",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if provided with a negative number",
              "fullTitle": "factorialSimple should throw an error if provided with a negative number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let callWithError = () => factorial.factorialSimple(-1);\nexpect(spy).to.be.a.spy;\nexpect(callWithError).to.throw(`Negative number!`);",
              "err": {},
              "uuid": "c0007018-5d18-4834-b087-18023f09e01d",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be called twice when provided with 2",
              "fullTitle": "factorialSimple should be called twice when provided with 2",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial.factorialSimple(2);\nexpect(spy).to.have.been.called(1);",
              "err": {},
              "uuid": "77e548ef-031d-46e6-9ed8-f0b36fd506f0",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when provided 1",
              "fullTitle": "factorialSimple should return 1 when provided 1",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(1)).to.be.equal(1);",
              "err": {},
              "uuid": "f538bebc-b25d-483e-90c6-a09ecf321456",
              "parentUUID": "0d282721-34a1-4ada-a803-7c156400364a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54e18827-225e-437d-b4b0-5e922a27f04b",
            "42152520-a737-454f-bae1-3202ca25b494",
            "c0007018-5d18-4834-b087-18023f09e01d",
            "77e548ef-031d-46e6-9ed8-f0b36fd506f0",
            "f538bebc-b25d-483e-90c6-a09ecf321456"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}